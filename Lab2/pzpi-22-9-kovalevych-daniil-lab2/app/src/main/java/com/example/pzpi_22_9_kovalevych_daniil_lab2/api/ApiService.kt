package com.example.pzpi_22_9_kovalevych_daniil_lab2.api

import okhttp3.OkHttpClient
import retrofit2.Retrofit
import retrofit2.converter.gson.GsonConverterFactory
import retrofit2.http.Body
import retrofit2.http.GET
import retrofit2.http.POST
import retrofit2.http.DELETE
import retrofit2.http.Path

// –û–ù–û–í–õ–ï–ù–ê –º–æ–¥–µ–ª—å –º–∞—à–∏–Ω–∏ ‚Äî —Ç–µ–ø–µ—Ä –≤–∫–ª—é—á–∞—î –≤—Å—ñ –ø–æ—Ç—Ä—ñ–±–Ω—ñ –ø–æ–ª—è
data class Vehicle(
    val id: Int = 0,
    val model: String,
    val license_plate: String,
    val year: Int
)

// Retrofit-—Å–µ—Ä–≤—ñ—Å
interface VehicleService {
    @GET("/vehicles")
    suspend fun getVehicles(): List<Vehicle>

    @POST("/vehicles")
    suspend fun addVehicle(@Body vehicle: Vehicle)

    @DELETE("/vehicles/{id}")
    suspend fun deleteVehicle(@Path("id") id: Int)
}

// üîê –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ API –∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—î—é
object VehicleApi {
    private const val BASE_URL = "http://10.0.2.2:8080"
    private const val USERNAME = "admin" // –∞–±–æ —ñ–Ω—à–∏–π –ª–æ–≥—ñ–Ω, —â–æ —î –≤ –ë–î

    private val client = OkHttpClient.Builder()
        .addInterceptor(AuthInterceptor(USERNAME))
        .build()

    val retrofitService: VehicleService by lazy {
        Retrofit.Builder()
            .baseUrl(BASE_URL)
            .addConverterFactory(GsonConverterFactory.create())
            .client(client) // –æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ
            .build()
            .create(VehicleService::class.java)
    }
}